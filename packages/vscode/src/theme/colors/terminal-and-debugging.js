export default function getTerminalAndDebugging(scheme, term) {
  return {
    "terminal.background": scheme.surfaceContainerLow,
    "terminal.border": scheme.outlineVariant,
    "terminal.foreground": scheme.onSurface,
    "terminal.ansiBlack": term.normal.black,
    "terminal.ansiRed": term.normal.red,
    "terminal.ansiGreen": term.normal.green,
    "terminal.ansiYellow": term.normal.yellow,
    "terminal.ansiBlue": term.normal.blue,
    "terminal.ansiMagenta": term.normal.magenta,
    "terminal.ansiCyan": term.normal.cyan,
    "terminal.ansiWhite": term.normal.white,
    "terminal.ansiBrightBlack": term.bright.black,
    "terminal.ansiBrightRed": term.bright.red,
    "terminal.ansiBrightGreen": term.bright.green,
    "terminal.ansiBrightYellow": term.bright.yellow,
    "terminal.ansiBrightBlue": term.bright.blue,
    "terminal.ansiBrightMagenta": term.bright.magenta,
    "terminal.ansiBrightCyan": term.bright.cyan,
    "terminal.ansiBrightWhite": term.bright.white,
    "terminal.selectionBackground": `${scheme.primaryContainer}66`,
    "terminal.selectionForeground": scheme.onPrimaryContainer,
    "terminal.inactiveSelectionBackground": `${scheme.primaryContainer}33`,
    "terminal.findMatchBackground": `${scheme.tertiaryContainer}66`,
    "terminal.findMatchBorder": scheme.tertiary,
    "terminal.findMatchHighlightBackground": `${scheme.tertiaryContainer}33`,
    "terminal.findMatchHighlightBorder": scheme.tertiary,
    "terminal.hoverHighlightBackground": `${scheme.secondaryContainer}33`,
    "terminalCursor.background": scheme.primary,
    "terminalCursor.foreground": scheme.onPrimary,
    "terminal.dropBackground": `${scheme.primary}33`,
    "terminal.tab.activeBorder": scheme.primary,
    "terminalCommandDecoration.defaultBackground": scheme.surfaceContainer,
    "terminalCommandDecoration.successBackground": scheme.secondary,
    "terminalCommandDecoration.errorBackground": scheme.error,
    "terminalOverviewRuler.cursorForeground": scheme.primary,
    "terminalOverviewRuler.findMatchForeground": scheme.tertiary,
    "terminalStickyScroll.background": scheme.surfaceContainer,
    "terminalStickyScroll.border": scheme.outlineVariant,
    "terminalStickyScrollHover.background": scheme.surfaceContainerHigh,
    "terminal.initialHintForeground": scheme.onSurfaceVariant,
    "terminalOverviewRuler.border": scheme.outlineVariant,
    "terminalCommandGuide.foreground": scheme.onSurface,

    "terminalSymbolIcon.aliasForeground": term.normal.magenta,
    "terminalSymbolIcon.branchForeground": term.normal.blue,
    "terminalSymbolIcon.commitForeground": term.normal.green,
    "terminalSymbolIcon.flagForeground": term.normal.red,
    "terminalSymbolIcon.optionForeground": term.normal.blue,
    "terminalSymbolIcon.optionValueForeground": term.normal.magenta,
    "terminalSymbolIcon.methodForeground": term.normal.blue,
    "terminalSymbolIcon.argumentForeground": term.normal.green,
    "terminalSymbolIcon.inlineSuggestionForeground": scheme.onSurfaceVariant,
    "terminalSymbolIcon.fileForeground": scheme.onSurfaceVariant,
    "terminalSymbolIcon.folderForeground": scheme.onSurfaceVariant,
    "terminalSymbolIcon.pullRequestDoneForeground": term.normal.green,
    "terminalSymbolIcon.pullRequestForeground": term.normal.blue,
    "terminalSymbolIcon.remoteForeground": term.normal.magenta,
    "terminalSymbolIcon.stashForeground": term.normal.green,
    "terminalSymbolIcon.symbolicLinkFileForeground": term.normal.blue,
    "terminalSymbolIcon.symbolicLinkFolderForeground": term.normal.blue,
    "terminalSymbolIcon.tagForeground": term.normal.magenta,

    "debugToolBar.background": scheme.surfaceContainer,
    "debugToolBar.border": scheme.outlineVariant,
    "editor.stackFrameHighlightBackground": `${scheme.primaryContainer}33`,
    "editor.focusedStackFrameHighlightBackground": `${scheme.primaryContainer}4D`,
    "editor.inlineValuesForeground": scheme.onSurface,
    "editor.inlineValuesBackground": scheme.surfaceContainer,
    "debugView.exceptionLabelForeground": scheme.error,
    "debugView.exceptionLabelBackground": `${scheme.errorContainer}33`,
    "debugView.stateLabelForeground": scheme.primary,
    "debugView.stateLabelBackground": `${scheme.primaryContainer}33`,
    "debugView.valueChangedHighlight": `${scheme.tertiaryContainer}66`,
    "debugTokenExpression.name": scheme.onSurface,
    "debugTokenExpression.value": scheme.onSurfaceVariant,
    "debugTokenExpression.string": term.normal.green,
    "debugTokenExpression.boolean": term.normal.magenta,
    "debugTokenExpression.number": term.normal.blue,
    "debugTokenExpression.error": term.normal.red,
    "debugTokenExpression.type": scheme.onSurfaceVariant,

    "debugIcon.breakpointForeground": scheme.error,
    "debugIcon.breakpointDisabledForeground": scheme.error,
    "debugIcon.breakpointUnverifiedForeground": scheme.error,
    "debugIcon.breakpointCurrentStackframeForeground": scheme.primary,
    "debugIcon.breakpointStackframeForeground": scheme.tertiary,
    "debugIcon.startForeground": scheme.secondary,
    "debugIcon.pauseForeground": scheme.primary,
    "debugIcon.stopForeground": scheme.error,
    "debugIcon.disconnectForeground": scheme.onSurfaceVariant,
    "debugIcon.restartForeground": scheme.secondary,
    "debugIcon.stepOverForeground": scheme.primary,
    "debugIcon.stepIntoForeground": scheme.primary,
    "debugIcon.stepOutForeground": scheme.primary,
    "debugIcon.continueForeground": scheme.secondary,
    "debugIcon.stepBackForeground": scheme.primary,
    "debugConsole.infoForeground": scheme.primary,
    "debugConsole.warningForeground": scheme.tertiary,
    "debugConsole.errorForeground": scheme.error,
    "debugConsole.sourceForeground": scheme.onSurfaceVariant,
    "debugConsoleInputIcon.foreground": scheme.onSurfaceVariant,

    "diffEditor.insertedTextBackground": `${scheme.secondaryContainer}33`,
    "diffEditor.insertedTextBorder": scheme.secondary,
    "diffEditor.removedTextBackground": `${scheme.errorContainer}33`,
    "diffEditor.removedTextBorder": scheme.error,
    "diffEditor.border": scheme.outlineVariant,
    "diffEditor.diagonalFill": `${scheme.outline}33`,
    "diffEditor.insertedLineBackground": `${scheme.secondaryContainer}1A`,
    "diffEditor.removedLineBackground": `${scheme.errorContainer}1A`,
    "diffEditorGutter.insertedLineBackground": scheme.secondary,
    "diffEditorGutter.removedLineBackground": scheme.error,
    "diffEditorOverview.insertedForeground": scheme.secondary,
    "diffEditorOverview.removedForeground": scheme.error,
    "diffEditor.unchangedRegionBackground": scheme.surfaceContainer,
    "diffEditor.unchangedRegionForeground": scheme.onSurfaceVariant,
    "diffEditor.unchangedRegionShadow": `${scheme.shadow}33`,
    "diffEditor.unchangedCodeBackground": scheme.surfaceContainerLowest,
    "diffEditor.move.border": scheme.primary,
    "diffEditor.moveActive.border": scheme.primary,
    "multiDiffEditor.headerBackground": scheme.surfaceContainerHigh,
    "multiDiffEditor.background": scheme.surfaceContainer,
    "multiDiffEditor.border": scheme.outlineVariant,
  };
}
