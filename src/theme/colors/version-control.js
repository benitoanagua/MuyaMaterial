export default function getVersionControl(scheme) {
  return {
    // Git colors
    "gitDecoration.addedResourceForeground": scheme.secondary,
    "gitDecoration.modifiedResourceForeground": scheme.primary,
    "gitDecoration.deletedResourceForeground": scheme.error,
    // "gitDecoration.renamedResourceForeground": scheme.tertiary,
    "gitDecoration.stageModifiedResourceForeground": scheme.primary,
    "gitDecoration.stageDeletedResourceForeground": scheme.error,
    "gitDecoration.untrackedResourceForeground": scheme.secondary,
    "gitDecoration.ignoredResourceForeground": scheme.onSurfaceVariant,
    "gitDecoration.conflictingResourceForeground": scheme.tertiary,
    "gitDecoration.submoduleResourceForeground": scheme.primary,
    "git.blame.editorDecorationForeground": scheme.onSurfaceVariant,

    // Merge conflicts colors
    "merge.currentHeaderBackground": `${scheme.primary}20`,
    "merge.currentContentBackground": `${scheme.primary}10`,
    "merge.incomingHeaderBackground": `${scheme.secondary}20`,
    "merge.incomingContentBackground": `${scheme.secondary}10`,
    "merge.border": scheme.outlineVariant,
    "merge.commonContentBackground": `${scheme.surfaceContainer}50`,
    "merge.commonHeaderBackground": `${scheme.surfaceContainer}70`,
    "editorOverviewRuler.currentContentForeground": scheme.primary,
    "editorOverviewRuler.incomingContentForeground": scheme.secondary,
    "editorOverviewRuler.commonContentForeground": scheme.outline,
    // "editorOverviewRuler.commentForeground": scheme.primary,
    // "editorOverviewRuler.commentUnresolvedForeground": scheme.secondary,
    "mergeEditor.change.background": `${scheme.primary}10`,
    "mergeEditor.change.word.background": `${scheme.primary}20`,
    "mergeEditor.conflict.unhandledUnfocused.border": scheme.error,
    "mergeEditor.conflict.unhandledFocused.border": scheme.error,
    "mergeEditor.conflict.handledUnfocused.border": scheme.primary,
    "mergeEditor.conflict.handledFocused.border": scheme.primary,
    "mergeEditor.conflict.handled.minimapOverViewRuler": scheme.primary,
    "mergeEditor.conflict.unhandled.minimapOverViewRuler": scheme.error,
    "mergeEditor.conflictingLines.background": `${scheme.surfaceContainer}30`,
    "mergeEditor.changeBase.background": `${scheme.surfaceContainer}20`,
    "mergeEditor.changeBase.word.background": `${scheme.surfaceContainer}40`,
    "mergeEditor.conflict.input1.background": `${scheme.primary}10`,
    "mergeEditor.conflict.input2.background": `${scheme.secondary}10`,

    // Peek view colors
    "peekView.border": scheme.outlineVariant,
    "peekViewEditor.background": scheme.surfaceContainerLowest,
    "peekViewEditorGutter.background": scheme.surfaceContainer,
    "peekViewEditor.matchHighlightBackground": `${scheme.tertiary}40`,
    "peekViewEditor.matchHighlightBorder": scheme.tertiary,
    "peekViewResult.background": scheme.surfaceContainer,
    "peekViewResult.fileForeground": scheme.onSurface,
    "peekViewResult.lineForeground": scheme.onSurfaceVariant,
    "peekViewResult.matchHighlightBackground": `${scheme.error}20`,
    "peekViewResult.selectionBackground": scheme.surfaceContainerHigh,
    "peekViewResult.selectionForeground": scheme.onSurface,
    "peekViewTitle.background": scheme.surfaceContainerHigh,
    "peekViewTitleDescription.foreground": scheme.onSurfaceVariant,
    "peekViewTitleLabel.foreground": scheme.onSurface,

    // Source Control Graph colors
    // "scmGraph.historyItemHoverLabelForeground": scheme.onSurface,
    // "scmGraph.foreground1": scheme.primary,
    // "scmGraph.foreground2": scheme.secondary,
    // "scmGraph.foreground3": scheme.tertiary,
    // "scmGraph.foreground4": scheme.error,
    // "scmGraph.foreground5": scheme.onSurfaceVariant,
    // "scmGraph.historyItemHoverAdditionsForeground": scheme.secondary,
    // "scmGraph.historyItemHoverDeletionsForeground": scheme.error,
    // "scmGraph.historyItemRefColor": scheme.primary,
    // "scmGraph.historyItemRemoteRefColor": scheme.secondary,
    // "scmGraph.historyItemBaseRefColor": scheme.tertiary,
    // "scmGraph.historyItemHoverDefaultLabelForeground": scheme.onSurfaceVariant,
    // "scmGraph.historyItemHoverDefaultLabelBackground": scheme.surfaceContainer,
  };
}
